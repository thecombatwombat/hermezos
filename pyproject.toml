[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hermezos"
version = "0.1.0"
description = "Local-first knowledge registry and context packer"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
authors = [
    {name = "HermezOS Team", email = "team@hermezos.dev"},
]
maintainers = [
    {name = "HermezOS Team", email = "team@hermezos.dev"},
]
keywords = ["knowledge", "registry", "context", "packer", "local-first"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving :: Packaging",
]
dependencies = [
    "pydantic>=2,<3",
    "typer>=0.12,<1",
    "rich>=13,<14",
    "ruamel.yaml>=0.18,<0.19",
    "pyyaml>=6.0,<7",
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "types-PyYAML",
    "pre-commit",
]
mcp = [
    "mcp>=0.1.0",  # Placeholder for MCP dependency when available
]
indexing = [
    "requests>=2.31,<3",
    "kuzu>=0.5,<1",
]
all = [
    "requests>=2.31,<3",
    "kuzu>=0.5,<1",
    "mcp>=0.1.0",
]

[project.scripts]
hermez = "hermezos.cli:app"

[project.urls]
Homepage = "https://github.com/hermezos/hermezos"
Documentation = "https://hermezos.dev/docs"
Repository = "https://github.com/hermezos/hermezos"
Issues = "https://github.com/hermezos/hermezos/issues"

[tool.setuptools]
packages = ["hermezos"]

[tool.setuptools.package-dir]
hermezos = "src/hermezos"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Allow typer.Option calls in argument defaults (common Typer pattern)
    "B008",
]
[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = false
disallow_any_generics = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
no_implicit_optional = false
warn_redundant_casts = false
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "hermezos.mcp.*",
]
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=hermezos",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
